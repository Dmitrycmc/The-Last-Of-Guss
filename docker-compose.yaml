version: '3.8'

services:
  postgres:
    image: postgres:15
    restart: always
    container_name: guss-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: guss
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend1:
    image: guss-backend
    ports:
      - "3001:3000"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    environment:
      INSTANCE: INSTANCE_1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.guss.rule=Host(`localhost`)"
      - "traefik.http.services.guss.loadbalancer.server.port=3000"

  backend2:
    image: guss-backend
    ports:
      - "3002:3000"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    environment:
      INSTANCE: INSTANCE_2
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.guss.rule=Host(`localhost`)"
      - "traefik.http.services.guss.loadbalancer.server.port=3000"

  backend3:
    image: guss-backend
    ports:
      - "3003:3000"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    environment:
      INSTANCE: INSTANCE_3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.guss.rule=Host(`localhost`)"
      - "traefik.http.services.guss.loadbalancer.server.port=3000"

  traefik:
    image: traefik:v2.11
    ports:
      - "80:80"
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  postgres_data:
  redis_data: